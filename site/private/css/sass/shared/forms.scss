@import "../partials/_globals";
@import "../partials/fontAwesome";


form {
  $formCorners: 4px;
  $formInputs: (
    "tags":             unquote("input, select, textarea"),
    "multi":            unquote(".radio, .checkbox, .toggle-box, .toggle-button"),
    "multi-parent":     unquote("&.radio, &.checkbox, &.toggle-box, &.toggle-button"),
    "not-multi":        unquote(":not(.radio):not(.checkbox):not(.toggle-box):not(.toggle-button)"),
    "not-multi-parent": unquote("&:not(.radio):not(.checkbox):not(.toggle-box):not(.toggle-button)")
  );

  @keyframes formFadeIn {
    0%   { opacity: 0; }
    100% { opacity: 1;}
  }

  width: 100%;
  border-radius: $formCorners;
  animation: formFadeIn 0.5s linear;

  &:not(.configured) {
    display: none;
  }

  // Containers & Wrappers
  .content-container {
    @include flexbox(none, none, $wrap: true);
  }
  fieldset {
    flex: 1 1 100%;
    border: none;

    fieldset {
      .fieldset-wrapper {
        @include flexbox($hAlign: s, $wrap: true);
      }
      .field {
        flex: 1 1 50%;
      }
    }
  }
  .section {
    @include flexbox(none, none, $wrap: true);
    overflow: hidden;

    &[hidden] {
      display: none;
    }
  }
  .field {
    @include flexbox($hAlign: s, $wrap: true);

    // @media screen and (max-width: 599px) {
    //   min-width: 200px;
    // }

    &[hidden] {
      display: none;
    }

    fieldset:not(.checkbox):not(.radio):not(.toggle-box):not(.toggle-button) {
      .field {
        width: 100%;
      }
    }
  }
  .children { 
    @include flexbox($hAlign: s, $wrap: true);
    width: 100%;

    @at-root form {
      .checkbox,
      .radio,
      .toggle-box,
      .toggle-button {
        .children {
          @include flexbox($hAlign: s, $wrap: true, $direction: c);
        }
      }
    }
  }
  .footer {
    @include flexbox(c, sb, $wrap: true);
    width: 100%;

    fieldset {
      @media screen and (min-width: 425px) {
        flex: 0;
      }
      @media screen and (max-width: 424px) {
        flex: 1 1;

        button {
          width: 100%;
        }
      }

      &.submit {
        margin-left: auto;
      }

      &[hidden] {
        display: none;
      }
    }
  }

  // Labels
  .title, label, legend {
    @include flexbox($hAlign: s);

    .required {
      @include flexbox;
      @include multiProp(0.85em, sizing);
      color: $site-color-main;
      background-color: #fff;
      cursor: help;
      border-radius: $formCorners;
      margin-right: 4px;
      opacity: 0.75;
  
      &[hidden] {
        display: none;
      }
  
      .fas {
        font-size: 0.55em;
      }
    }
  }
  .subtitle {
    
  }
  .description {
    display: inline-block;
    background-color: tpw(0.25);
    border: bd(1.5px, tpw(0.25));
    border-radius: $formCorners;
    text-shadow: dropShadow(tpb(0.5));

    > ul, > ol {
      margin-left: 0;
    }
  }
  .title, label, legend, .subtitle, .description {
    width: 100%;
    @include animation(0.8s, ease-out, $fill: forwards);

    @at-root form.hide-details {
      .section .title, .subtitle, .description, .details, span.required {
        position: absolute;
        @include pull(t, l);
        z-index: zOrder(hidden);
        opacity: 0;
        visibility: hidden;
      }
    }
  }
  .title-container {
    width: 100%;

    .subtitle {
      opacity: 0.75;
    }
  }

  // Inputs
  .input-container {
    @include flexbox;
    border-radius: $formCorners;
    box-shadow: inset shadow(tpb(0.5), 5px);
    overflow: hidden;

    @include pshared {
      @include fill(true);
    }
    &::after {
      border: bd(1.5px);
    }

    // Text/Number/URL/Password/Date/Time/Select/Textarea
    &:not(.checkbox):not(.radio):not(.toggle-button):not(.toggle-box) {
       &::before {
         background-color: tpw(0.2);
       }
       &::after {
         color: tpw(0.75);
       }

       &:not(.button):not(.reset):not(.submit) {
         width: 100%;
       }
       &.has-char-counter input {
         padding-right: 0;
       } 

       // Select Field
       &.select {
        &::after {
          @include flexbox($hAlign: e);
          @include faIcon(caret-down);
          font-size: 1.25em;
          padding: 8px;
        }

        select {
          cursor: pointer;
        }
        option[value=""] {
          color: tpb(0.5);
        }
       }
       // Textarea Field
       &.textarea {
        flex-wrap: wrap;
  
        .toolbox {
          display: flex;
          width: 100%;
          border-top: 1.5px dotted tpw(0.5);
          z-index: zOrder(higher);
    
          &[hidden] {
            display: none;
          }
        }

         textarea {
          resize: vertical;
          min-height: 6em;
         }
       }

       #{map-get($formInputs, 'tags')} {
        @include multiProp(100%, sizing);
       }
       input, textarea {
        cursor: text;
      }
     }
    // Checkbox/Radio/Toggle Box/Toggle Button
    &.checkbox, &.radio, &.toggle-box, &.toggle-button {
      display: inline-flex;
      @include multiProp(1.25em, sizing);
      font-size: 1em;
      margin-right: 8px;

      @at-root form .field {
        @include mouseState(click) {
          > .input-container {
            &.checkbox, &.radio, &.toggle-box {
              > input::before {
                transform: scale(0.75);
              }
            }
            &.toggle-button {
              > input {
                &:not(:checked)::after {
                  transform: scale(0.75);
                }
                &:checked::after {
                  transform: translateX(100%) scale(0.75);
                }
              }
            }
          }
        }
      }

      // Radio Fields
      &.radio {
        input {
          @include multiProp(1.25em, sizing);
  
          &::before {
            @include fill(true, #fff);
            margin: 0.15em;
          }
        }
        &, input {
          border-radius: 50%;
        }
      }
      // Toggle-Button Fields
      &.toggle-button {
        $padding: 0.5em;

        width: 3.25em;
        height: 1.75em;
        border-radius: 20px;

        input {
          @include flexbox($hAlign: none);
          @include multiProp(100%, sizing);
          justify-content: normal;
          padding: 0.25em;

          &:checked {
            &::before { 
              opacity: 0.35;
            }
            &::after { 
              opacity: 1;
              transform: translateX(100%); 
            }
          }

          &::before {
            @include fill(true, #fff);
            border-radius: 20px;
            opacity: 0;
          }
          &::after {
            position: absolute;
            width: 1.25em;
            height: calc(100% - 0.5em);
            background-color: #fff;
            border-radius: 20px;
            content: "";
            opacity: 0.75;
          }
        }
      }
      // Checkbox & Toggle-Box Fields
      &.checkbox, &.toggle-box {
        input {
          @include flexbox;
  
          &::before {
            @include faIcon(check);
            font-size: 0.85em;
          }
        }
      }

      + label {
        width: auto;
      }
      input, + label {
        cursor: pointer;
      }
    }

    #{map-get($formInputs, 'tags')} {
      @include multiProp(none, appearance, -moz-appearance, -webkit-appearance);
      border: bd(1.5px, transparent);
      border-radius: $formCorners;
      color: #fff;
      background: none;
      @include multiProp(inherit, font-size, font-family);
      z-index: zOrder(higher);
  
      &:invalid {
        box-shadow: none;
      }
    }
  }
  a, button {
    &.submit {
      &.disabled-by-submit {
        > span   { opacity: 0 !important; }
        .spinner { opacity: 1; }
      }

      .spinner {
        position: absolute; 
        opacity: 0;
        transform: scale(0.75);
      }
    }
  }

  // Alerts
  .alerts {
    $alertPadding: 12px;
    $alertColor: #ff4500;

    @include flexbox(none, none, $direction: c);
    flex: 1 1 100%;

    .alert {
      @include flexbox(none, none);
      border: 1.5px solid $alertColor;
      border-radius: 4px;
      background-color: tpw(0.1);
      flex: 1 1 100%;

      .icon {
        @include flexbox;
        padding: $alertPadding;
        font-size: 1.5em;
        background-color: $alertColor;
      }
      .message {
        @include flexbox(c, s);
        padding: $alertPadding;

        a.themed {
          color: $alertColor;
        }
      }
    }
  }

  // Spacing
  & {
    $baseSpacing: 12px;                   // The amount of spacing used as the base of all form spacing
    $outerPadding: 16px;                  // The amount of spacing used to separate the form from other elements

    $fieldSpacing: $baseSpacing * 0.5;    // The amount of spacing used to separate fields and their components
    $contentSpacing: $fieldSpacing * 2.0; // The amount of spacing used to separate subtitles and descriptions
    $sectionSpacing: $baseSpacing * 1.75; // The amount of spacing used to separate sections

    // Default Spacing
    &:not(.no-spacing):not(.vertical-spacing):not(.double-spacing) {
      > .content-container {
        padding: $outerPadding;
      }
    }
    &.vertical-spacing > .content-container {
      margin: -#{$fieldSpacing};
    }
    &.double-spacing > .content-container {
      padding: $outerPadding * 2;
    }

    // Internal Spacing
    &:not(.no-spacing) {
      .title-container {
        padding: 0 $fieldSpacing;
        margin-bottom: $sectionSpacing;
  
        .description:not(:first-child) {
          margin-top: #{$fieldSpacing * 2}; 
        }
      }
      .section:not(:last-child):not(.footer) { 
        margin-bottom: $sectionSpacing;
      } 
      .field {
        margin: $fieldSpacing $fieldSpacing #{$fieldSpacing * 2};
  
        .children .field { 
          margin-bottom: $fieldSpacing;
        }
        @at-root form .footer .field {
          margin-bottom: $fieldSpacing;
        }
      }
      .children {
        margin: #{$fieldSpacing} -#{$fieldSpacing};
        width: calc(100% + #{$contentSpacing}); 
        
        .field .input-container {
          margin-top: 0;
          margin-bottom: 0;
        }
      }
      .input-container {
        &:not(:first-child) { 
          margin-top: $contentSpacing;
         }
        &:not(:last-child) { 
          margin-bottom: $contentSpacing;
         }
      }
      .alerts {
        .alert {
          @include multiProp($fieldSpacing, margin-top, margin-bottom);
        }

        @at-root form .title-container + .alerts .alert {
          @include multiProp($fieldSpacing, margin-left, margin-right);
         
          &:last-child {
            margin-bottom: $sectionSpacing;
          }
        }
      }
    }

    .description, 
    .input-container:not(.checkbox):not(.radio):not(.toggle-button):not(.toggle-box) #{map-get($formInputs, 'tags')} {
      padding: $baseSpacing;
    }
  }

  // Sizing
  fieldset, .field {
    &.size {
      $sizes: (
        full:       100%,
        two-thirds: 66.6%,
        half:       50%,
        third:      33.3%
      );

      @each $sizeName, $sizeVal in $sizes {
        &.#{$sizeName} {
          flex-basis: $sizeVal;
        }
      }
    }

    @at-root form .footer {
      fieldset, .field {
        &.size {
          @media screen and (min-width: 425px) {
            flex-basis: 0;
          }
          @media screen and (max-width: 424px) {
            flex-basis: 50%;
          }
        }
      }
    }
  }

  // Mouse States
  .field {
    @at-root %noHover {
      .input-container {
        &                             { opacity: 0.75; }

        &::before                     { opacity: 0.65; }
        &::after                      { opacity: 0.5; }

        &.radio,
        &.checkbox,
        &.toggle-box {
          input {
            &:checked::before         { opacity: 0.75; }
            &:not(:checked)::before   { opacity: 0; }
          }
        }

        .char-counter,
        .toolbox                      { opacity: 0; }
      }
      .alert,           
      .description, 
      #{map-get($formInputs, 'tags')} { opacity: 0.65; }
      label, 
      legend                          { opacity: 0.65; }
      .subtitle                       { opacity: 0.5; }
    }

    &:not(.disabled):not(.readonly) {
      &:not(.hover):not(.focus) {
        @extend %noHover;
      }
      &.hover {
        .input-container {
          &                             { opacity: 0.85; }

          &::before                     { opacity: 0.65; }
          &::after                      { opacity: 1; }

          &.radio,
          &.checkbox,
          &.toggle-box {
            input {
              &:checked::before         { opacity: 1; }
              &:not(:checked)::before   { opacity: 0; }
            }
          }

          .char-counter,
          .toolbox                      { opacity: 0.75; }
        }
        .alert,           
        .description, 
        #{map-get($formInputs, 'tags')} { opacity: 1; }
        label, 
        legend                          { opacity: 0.75; }
        .subtitle                       { opacity: 0.75; }
      }
      &.focus {
        .input-container {
          &                             { opacity: 1; }

          &::before                     { opacity: 1; }
          &::after                      { opacity: 1; }

          &.radio,
          &.checkbox,
          &.toggle-box {
            input {
              &:checked::before         { opacity: 1; }
              &:not(:checked)::before   { opacity: 0; }
            }
          }

          .char-counter,
          .toolbox                      { opacity: 1; }
        }
        .alert,           
        .description, 
        #{map-get($formInputs, 'tags')} { opacity: 1; }
        label, 
        legend                          { opacity: 1; }
        .subtitle                       { opacity: 0.75; }
      }
    }
    &.disabled, &.readonly {
      @extend %noHover;
    }
  }

  // Font Sizes
  & {
    .description                    { font-size: 0.9em; }
    #{map-get($formInputs, 'tags')} { font-size: 1em; }
    // Form Base
    > .content-container {
      font-size: 1em;

      .title       { font-size: 1.5em; }
      .subtitle    { font-size: 1.1em; }
    }
    // Section
    .section > {
      .title       { font-size: 1.25em; }
      .subtitle    { font-size: 1.1em; }
    }
    .field > {
      label, 
      legend       { font-size: 1.15em; }
      .subtitle    { font-size: 1em; }
    }

  }
}

// $inputs: unquote("input, select, textarea");
// $padding: 4px;
// $wallPadding: 16px;
// $formCorners: 4px;
// $labelSize: 1.15em;

// form {
//   @keyframes formFadeIn {
//     from { opacity: 0; }
//     to   { opacity: 1; }
//   }

//   border-radius: 4px;
//   width: 100%;
//   animation: formFadeIn 0.5s linear;

//   // &:not(.configured) {
//   //   display: none;
//   // }
//   // Field backgrounds
//   // &.show-field-walls .content-container {
//   //   > .title {
//   //     @include theme(bg);
//   //     text-shadow: dropShadow(tpb(0.5));
//   //     border-radius: 4px 4px 0 0;
//   //     padding: #{$padding + $wallPadding};
  
//   //     &::before {
//   //       @include fill(true, tpb(0.25));
//   //     }
//   //   }
//   //   .section > .title {
//   //     background-color: tpw(0.15);
//   //   }
//   //   > .alerts .alert {
//   //     margin: $wallPadding + $padding;
//   //   }
//   //   > .alerts, & > fieldset, .section > fieldset {
//   //     // Background walls
//   //     & {
//   //       $bgs: (
//   //         1: 0.1,
//   //         2: 0.05,
//   //         3: 0.075,
//   //         4: 0.125
//   //       );

//   //       @each $nth, $bg in $bgs {
//   //         &:nth-of-type(4n + #{$nth}) {
//   //           background-color: tpw($bg);
//   //         }
//   //       }
//   //     }

//   //     > .fieldset-wrapper {
//   //       padding: $wallPadding;
//   //     }
//   //   }
//   //   .field {
//   //     padding: $padding;
//   //   }
//   // }
//   // &:not(.show-field-walls) .content-container {
//   //   // margin: -#{$padding * 2};
//   //   padding: 0; // #{$padding * 2} 0;    
//   //   margin: 0; // -16px;
    
//   //   margin-top: 0;
//   //   @at-root form:first-child {
//   //   }
//   //   &, > .section:not(.footer), > fieldset.group > .fieldset-wrapper > .field {
//   //     > fieldset:not(.group) > .fieldset-wrapper {
//   //       padding: $padding #{$padding * 2};
         
//   //       .field {
//   //         padding: #{$padding * 2};
//   //       }
//   //     }
//   //     > fieldset {
//   //       &.checkbox, &.radio {
//   //         > .fieldset-wrapper {
//   //           .field {
//   //             padding: 0 #{$padding * 2};
//   //           }
//   //         }
//   //       }
//   //     }
//   //   }
//   //   .section.footer {
//   //     padding: #{$padding * 2} #{$padding * 4};
//   //   }
//   //   > .title, .section > .title {
//   //     padding: #{$padding * 2} #{$padding * 4};
//   //   }
//   //   > .alerts .alert {
//   //     margin: 8px 0;
//   //   }
//   // }
//   .subtitle {
//     margin-top: 4px;
//     width: 100%;
//   }
//   .description {
//     display: inline-block;
//     // max-width: 50%;
//     background-color: tpw(0.25);
//     border: bd(1.5px, tpw(0.75));
//     border-radius: $formCorners;
//     margin-top: #{$padding * 2};
//     padding: #{$padding * 3};
//     text-shadow: dropShadow(tpb(0.5));

//     > ul, > ol {
//       margin-left: 0;
//     }
//   }
//   .subtitle, .description {
//     font-size: 0.9rem;
//     // font-style: italic;
//     width: 100%;
//     // min-width: 50%;
//     // opacity: 0.85;
//     // margin-top: 4px;
//     @include animation(0.8s, ease-out, $fill: forwards);

//     @at-root form {
//       &.hide-details {
//         .title, .subtitle, .description, .details {
//           display: none;
//         }
//       }
//       fieldset {
//         &.radio, &.checkbox, &.toggle-box, &.toggle-button {
//           .subtitle {
//             padding: $padding 0;
//             margin-top: 0;
//           }
//           .description {
//             margin: $padding 0;
//             width: calc(100% - #{$padding * 2});
//           }
//         }
//       }
//     }
//   }
//   // Title & Subtitles
//   & .content-container, .section, .field {
//     > .title {
//       font-size: 1.35em;
//       width: 100%;
//     }
//   }
//   .alerts {
//     $alertPadding: 12px;
//     $alertColor: #ff4500;

//     @include flexbox(none, none, $direction: c);
//     flex: 1 1 100%;

//     .alert {
//       @include flexbox(none, none);
//       border: 1.5px solid $alertColor;
//       border-radius: 4px;
//       background-color: tpw(0.1);
//       margin-top: $alertPadding;
//       flex: 1 1 100%;
//       font-size: 0.9em;

//       .icon {
//         @include flexbox;
//         padding: $alertPadding;
//         font-size: 1.5em;
//         background-color: $alertColor;
//       }
//       .message {
//         padding: $alertPadding;

//         a.themed {
//           color: $alertColor;
//         }
//       }
//     }
//   }
//   .section {
//     @include flexbox(none, none, $wrap: true);
//     // border-radius: 4px;
//     overflow: hidden;

//     &:not(:last-of-type) {
//       margin-bottom: #{$padding * 4};
//     }
    
//     &[hidden] {
//       display: none;
//     }
//     &.size {
//       $sel: unquote("fieldset:not(.size)");
  
//       &.two-thirds #{$sel} { flex-basis: 66.6%; }
//       &.half #{$sel}       { flex-basis: 50%; }
//       &.third #{$sel}      { flex-basis: 33.3%; }
//     }
//   }
//   fieldset {
//     flex: 1 1 100%;
//     border: none;
  
//     &:not(.hover):not(.focus) {
//       legend {
//         opacity: 0.7;
//       }
//     }
  
//     &.size {
//       &.two-thirds { flex-basis: 66.6%; }
//       &.half       { flex-basis: 50%; }
//       &.third      { flex-basis: 33.3%; }
//     }
//     &.inline {
//       .fieldset-wrapper {
//         @include flexbox($hAlign: s, $wrap: true);
//       }
//       .field {
//         flex: 1 1 50%;
//       }
//       legend        { font-size: $labelSize; }
//       label         { font-size: 1em; }
//     }
//     &.tz, &.datetime, &.datetimetz {
//       fieldset {
//         &.date, &.time, &.select {
//           flex: 1 1 calc(50% - 8px);

//           &:first-of-type:not(:last-of-type) {
//             margin-right: 8px;
//           }

//           .field {
//             padding: 0;
//           }

//           // &.date, &.time { flex: 1 1; }
//           // &.tz           { flex: 1 1 100%; }
//         }
//       }
//     }
  
//     &:not(.group) fieldset:not(:first-child) {
//       &:not(.date):not(.time):not(.tz) {
//         margin-top: #{$padding * 2};
//       }
//     }
//   }
//   .section > fieldset, fieldset {
//     $legend: unquote(".fieldset-wrapper > legend");
  
//     &:not(.inline) {
//       > #{$legend}          { font-size: 1.25em; }
//       fieldset > #{$legend} { font-size: $labelSize; }
//     }
//   }
//   .field {
//     @include flexbox($hAlign: s, $wrap: true);
  
//     @media screen and (max-width: 599px) {
//       min-width: 200px;
//     }

//     @at-root form fieldset {
//       &.radio, &.checkbox {
//         .field {

//           margin-top: $padding;
//           margin-bottom: $padding;
//         }
//       }
//       &:not(.group) .field .field {
//         $innerPadding: $padding * 2;
  
//         padding: $innerPadding 0 $innerPadding 0 !important;
//         width: 100%;

//         .input-container {
//           margin-top: 0;
//         }
//       }
//     }
//     &[hidden] {
//       display: none;
//     }
  
//     // Hover/Focus
//     &:not(.focus):not(.disabled):not(.readonly) {
//       &:not(.hover) {
//         @at-root %components {
//           &:not([type="radio"]):not([type="checkbox"]) {
//             opacity: 0.7;
//           }
//         }

//         > {
//           .subtitle, .description { opacity: 0.6; }
  
//           .input-container {
//             &                 { opacity: 0.75; }
//             &::after          { opacity: 0.5; }
    
//             .char-counter     { opacity: 0.25; }
//             .toolbox {
//               opacity: 0.25;

//               .char-counter {
//                 opacity: 0.75;
//               }
//             }
//           }
//           #{$inputs}, .alert {
//             @extend %components;
//           }
//         }
//         label {
//           @extend %components;
//         }
//       }
  
//       .input-container {
//         &::before               { opacity: 0.5; }
//         &::after                { opacity: 0.75; }
//       }
//     }
//     &.disabled, &.readonly {
//       .input, label             { cursor: not-allowed !important; }
//       .subtitle, .description   { opacity: 0.5; }
//       .input-container {
//         opacity: 0.5;

//         &::after                { opacity: 0.25; }

//         .char-counter           { opacity: 0; }
//         .toolbox                { opacity: 0; }
//       }
//       label, #{$inputs}, .alert { opacity: 0.5; }
//     }
//   }
//   legend {
//     width: 100%;
//     padding: $padding 0;
//   }
//   // label {
//   //   font-size: $labelSize;
//   // }
//   legend, label {
//     @include flexbox($hAlign: s);
//     font-size: $labelSize;
//     width: 100%;
  
//     .required {
//       @include flexbox;
//       @include multiProp(0.85em, sizing);
//       color: $site-color-main;
//       background-color: #fff;
//       cursor: help;
//       border-radius: $formCorners;
//       margin-right: 4px;
//       opacity: 0.75;
  
//       &[hidden] {
//         display: none;
//       }
  
//       .fas {
//         font-size: 0.55em;
//       }
//     }
//   }
//   .input-container {
//     @include flexbox;
//     border-radius: $formCorners;
//     box-shadow: inset shadow(tpb(0.5), 5px);
//     font-size: 1em;
//     overflow: hidden;
  
//     @include pshared {
//       @include fill(true);
//     }
//     &::after {
//       border: bd(1.5px);
//     }
  
//     // Text/Number/URL/Password/Date/Time/Select/Textarea
//     &:not(.checkbox):not(.radio):not(.toggle-button):not(.toggle-box) {
//       margin-top: 8px;
  
//       &::before { background-color: tpw(0.15); }
//       &::after  { color: tpw(0.75); }
  
//       &.select {
//         &::after {
//           @include flexbox($hAlign: e);
//           @include faIcon(caret-down);
//           font-size: 1.25em;
//           padding: 8px;
//         }
  
//         select {
//           cursor: pointer;
//         }
//         option[value=""] {
//           color: tpb(0.5);
//         }
//       }
//       &.has-char-counter input {
//         padding-right: 0;
//       }
  
//       #{$inputs} {
//         @include multiProp(100%, sizing);
//         padding: #{$padding * 2};
//       }
//       input, textarea {
//         cursor: text;
//       }
//     }
//     &:not(.checkbox):not(.radio):not(.toggle-button):not(.toggle-box):not(.button):not(.submit) {
//       width: 100%;
//     }
//     &.textarea {
//       flex-wrap: wrap;
  
//       .toolbox {
//         display: flex;
//         width: 100%;
//         border-top: 1.5px dotted tpw(0.5);
//         z-index: zOrder(higher);
  
//         &[hidden] {
//           display: none;
//         }
//       }
//     }
//     // Checbox/Radio/Toggle
//     &.checkbox, &.radio, &.toggle-button, &.toggle-box {
//       display: inline-flex;
//       @include multiProp(1.25em, sizing);
//       margin-right: 8px;
//       font-size: 1em;
  
//       &.checkbox input, &.toggle-box input {
//         @include flexbox;
  
//         &::before {
//           @include faIcon(check);
//           font-size: 0.85em;
//         }
//       }
//       &.radio {
//         input {
//           @include multiProp(1.25em, sizing);
  
//           &::before {
//             @include fill(true, #fff);
//             margin: 0.15em;
//           }
//         }
//         &, input {
//           border-radius: 50%;
//         }
//       }
//       &.toggle-button {
//         $padding: 0.5em;

//         width: 3.25em;
//         height: 1.75em;
//         border-radius: 20px;

//         input {
//           @include flexbox($hAlign: none);
//           @include multiProp(100%, sizing);
//           justify-content: normal;
//           padding: 0.25em;

//           &::before {
//             @include fill(true, #fff);
//             opacity: 0.15;

//             @at-root form .input-container.toggle-button input {
//               &:not(:checked)::before {
//                 opacity: 0;
//               }
//             }
//           }
//           &::after {
//             position: absolute;
//             width: 1.25em;
//             height: calc(100% - 0.5em);
//             background-color: #fff;
//             border-radius: 20px;
//             content: "";

//             @at-root form .input-container.toggle-button input {
//               &:checked {
//                 &::after {
//                   transform: translateX(100%);
//                 }
//               }
//               &:not(:checked)::after {
//                 opacity: 0.5;
//               }
//             }
//           }
//         }
//       }
  
//       &:not(.toggle-button) {
//         input:not(:checked) {
//           opacity: 0;
//         }
//       }
//       input, + label {
//         cursor: pointer;
//       }
//       + label {
//         width: auto;
//         font-size: 1.05em;
//       }
//     }
//     // Buttons
//     &.button, &.reset, &.submit {
//       @include pshared {
//         display: none;
//       }

//       // button {
//       //   padding: 16px 32px;
//       // }
      
//       // cursor: pointer;
//     }
  
//     .char-counter {
//       padding: #{$padding * 2};
//       opacity: 0.5;
//       cursor: help;
//       margin-left: auto;
//       z-index: zOrder(higher);
//     }
//   }
//   // Inputs
//   textarea {
//     resize: vertical;
//     min-height: 6em;
//   }
//   #{$inputs} {
//     @include multiProp(none, appearance, -moz-appearance, -webkit-appearance);
//     border: bd(1.5px, transparent);
//     border-radius: $formCorners;
//     color: #fff;
//     background: none;
//     @include multiProp(inherit, font-size, font-family);
//     z-index: zOrder(higher);

//     &:invalid {
//       box-shadow: none;
//     }
//   }
//   .footer {
//     display: grid;
//     grid-template-columns: auto auto 1fr auto;

//     fieldset {
//       &.reset {
//         @include flexbox($hAlign: s);
//         grid-column: 1;
//         margin-right: 16px;
//       }
//       &.details-toggle {
//         @include flexbox($hAlign: s);
//         grid-column: 2;
//         margin-right: 16px;
//       }
//       &.progress {
//         @include flexbox;
//         grid-column: 3;
//         width: 100%;
//         overflow: hidden;
    
//         .progress-bar {
//           @include flexbox($hAlign: none);
//           border-radius: 4px;
//           height: 10px;
//           background-color: tpw(0.15);
          
//           .progress {
//             @include flexbox($hAlign: e);
//           }
//           .progress-count {
//             position: absolute;
//             background-color: tpb(0.75);
//             box-shadow: shadow(tpb(0.5));
//             border: bd(tpw(0.75), 1px);
//             border-radius: 4px;
//             padding: 4px 8px;
//             transform: translateX(100%);
//           }
//         }
//       }
//       &.submit {
//         @include flexbox($hAlign: e);
//         grid-column: 5;
//         margin-left: 16px;
//       }
//     }
//   }
// }