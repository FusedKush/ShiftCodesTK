/*********************************
  Index Page Styles
*********************************/
@import "../partials/_globals";

main.no-header {
  @include ready;

  @include flexbox(none, none, $direction: c);
  padding-top: 0;
}
section {
  $sBorderWidth: 2px;

  @include bgImg;
  flex: 1;
  text-shadow: dropShadow(tpb(0.75));
  box-shadow: shadow(tpb(0.5), 10px);

  &:not(.faq)::before {
    @include fill(true, tpb(0.6));
  }
  &:not(:first-of-type) {
    border-top: bd(#{$sBorderWidth});
  }

  @each $themeN, $themeV in $themeColors {
    &.#{$themeN} {
      border-color: #{$themeV};
    }
  }

  &.main {
    padding-top: 64px;
    text-align: center;
    @include multiProp(calc(100vh + #{$sBorderWidth}), height, min-height);
    @include theme(bc);
    @include flexbox;

    .content-wrapper {
      @include flexbox($direction: c);
    }
    .brand {
      @include flexbox($vAlign: none, $direction: c);
      font-size: 2em;
      margin-bottom: 16px;

      .logo {
        width: 3.5em;
        box-shadow: 2px 2px 4px tpb(0.75);
        border-radius: 50%;
      }
      .name {
        font-size: 1.25em;
      }
      .tagline {
        font-size: 0.9em;
        opacity: 0.75;
      }
    }
    .actions-container {
      $actionPadding: 12px;

      background-color: tpw(0.25);
      border: bd(1.5px, tpw(0.75));
      border-radius: 4px;
      padding: $actionPadding;
      min-width: 42%;

      .string {
        font-weight: 400;
        color: tpw(0.75);

        .selected {
          $selectedBorderSize: 3px;

          @mixin borderAnimation ($opacity, $translate) {
            opacity: $opacity;
            transform: translateY($translate);
          }

          @keyframes chosenText {
            0%  { opacity: 1; }
            50% { opacity: 0.5; }
          }
          @keyframes chosenBorder {
            0%        { @include borderAnimation(0, 25%); }
            50%, 100% { @include borderAnimation(1, 0); }
          }

          color: #fff;
          margin-bottom: $selectedBorderSize;
          white-space: pre;

          &::before {
            @include fill(true);
            bottom: -#{$selectedBorderSize};
            border-bottom: bd($selectedBorderSize);
            opacity: 0;
          }
          &, &::before {
            @include animation(0.75s, ease-out, $fill: forwards);
          }
          &.chosen {
            animation-name: chosenText;

            &::before {
              animation-name: chosenBorder;
            }
          }

          @each $themeN, $themeV in $themeColors {
            @if ($themeN != main) {
              &.#{$themeN}::before { color: #{$themeV}; }
            }
          }
        }
      }
      .link-container {
        $buttonMargins: 4px;

        @include flexbox(none, none, $wrap: true);
        margin-top: calc(-#{$buttonMargins} + #{$actionPadding});
        font-size: 1.25em;

        .button {
          flex: 1;
          margin: $buttonMargins;
          min-width: 6.5em;
        }
      }
    }
  }
  // &:not(.main) {
  //   // @include multiProp(calc(75vh + #{$sBorderWidth} - 64px), height, min-height);
  // }
  &.secondary {
    &:nth-of-type(odd) .content-wrapper {
      align-items: flex-end;
      text-align: end;
    }

    .content-wrapper {
      @include flexbox($hAlign: s, $direction: c);
      @include multiProp(64px, padding-top, padding-bottom);
    }
    .intro {
      font-size: 1.25em;
      padding-bottom: 8px;
      margin-bottom: 12px;
      border-bottom: bd(3px);
      max-width: 25em;

      // Separator theme
      @at-root section.secondary {
        @each $themeN, $themeV in $themeColors {
          @if ($themeN != main) {
            &.#{$themeN} .intro {
              border-color: #{$themeV};
            }
          }
        }
      }
    }
    .quote {
      color: tpw(0.75);

      @include pshared {
        opacity: 0.75;
        content: '"';
      }
    }
    .button {
      font-size: 1.5em;
    }
  }
  &.faq {
    border-color: $theme-main;
    // @include multiProp(32px, padding-top, padding-bottom);

    .content-wrapper {
      @include flexbox(none, none, $direction: c);
      padding: 64px 32px;
    }
    h2.title {
      margin-bottom: 16px;
    }
    .link {
      padding: 8px;
      margin-top: 16px;
      background-color: tpw(0.25);
      border: bd(1.5px, tpw(0.75));
      border-radius: 4px;
      text-align: center;
    }
    .dropdown-panel {
      text-shadow: none;
    }
  }

  .content-wrapper {
    @include multiProp(100%, sizing);

    @media screen and (max-width: 499px) {
      font-size: 0.85em;
      @include multiProp(16px, padding-left, padding-right);
    }
    @media screen and (min-width: 500px) {
      font-size: 1em;
      @include multiProp(32px, padding-left, padding-right);
    }

    a.button {
      background-color: tpw(0.15);
      overflow: hidden;
      font-size: 1.15em;
      padding: 16px 32px;

      // &::before {
      //   border: none;
      // }
      // &::after {
      //   border: bd(1.5px, tpw(0.5));
      // }

      // @each $themeN, $themeV in $themeColors {
      //   @if ($themeN != main) {
      //     &.#{$themeN}::before {
      //       background-color: #{$themeV};
      //     }
      //   }
      // }

      // // Mouse States
      // & {
      //   @mixin linkPs ($before, $after) {
      //     &::before { opacity: $before; }
      //     &::after  { opacity: $after; }
      //   }
      //   @at-root %idleState {
      //     @include linkPs(0, 1);
      //   }

      //   &:not([disabled]) {
      //     @include mouseState(noHover) {
      //       @extend %idleState;
      //     }
      //     @include mouseState(hover) {
      //       @include linkPs(1, 0);
      //     }
      //     @include mouseState(click) {
      //       opacity: 0.75;
      //     }
      //   }
      //   &[disabled] {
      //     @extend %idleState;
      //   }
      // }
    }
  }
  .flags {
    @include flexbox(none, sb);
    position: absolute;
    @include pull(t, lr);
    z-index: zOrder(higher);

    .flag {
      $xPos: 1.25em;
      $yPos: 2.25em;
      $rotation: 135deg;

      @mixin flagAnim ($opacity, $shadow: tpb(0.25)) {
        opacity: $opacity;
        box-shadow: 0 0 10px $shadow;
      }

      @keyframes flagFadeIn {
        0% { @include flagAnim(0); }
        50% { @include flagAnim(0.5, tpw(0.25)); }
        100% { @include flagAnim(1); }
      }

      @include flexbox(s, c);
      @include sizing(3em, 6em);
      @include spacing(0 4px, 0.5em);
      font-size: 0.5em;
      border: bd(1.5px, tpb(0.25));
      text-shadow: dropShadow(tpb(0.25));
      animation: flagFadeIn 0.5s linear forwards;
      opacity: 0;

      &:first-child {
        transform: rotate($rotation) translate($xPos, $yPos);

        .fas { transform: rotate(-$rotation); }
      }
      &:not(:first-child) {
        transform: rotate(-$rotation) translate(-$xPos, $yPos);

        .fas { transform: rotate($rotation); }
      }
      &.new { background-color: $badge-new; }
      &.expiring{ background-color: $badge-expiring; }
    }
  }
}
