@import "../partials/_globals";

.sidebar {
  @include ready;
  position: fixed;
  @include pull(all);
  z-index: zOrder(sidebar);

  &::before { @include fill(true, tpb(0.5)); }

  &[aria-expanded="false"]::before { opacity: 0; }
  &[aria-expanded="true"]::before  { opacity: 1; }
  @include hiddenToggle(block);

  .panel {
    position: absolute;
    @include pull(tb, l);
    @include flexbox(none, none, $direction: c);
    @include colors(inherit, $site-color-darker);
    box-shadow: shadow(tpb(0.5), 0.5em);
    max-width: 19em;
    overflow: auto;

    @at-root .sidebar {
      &[aria-expanded="false"] .panel { transform: translateX(calc(-100% - 0.5em)); }
      &[aria-expanded="true"] .panel { transform: translateX(0); }
    }
  }
  .header {
    @include flexbox(c, none);
    @include sizing(64px, 100%);
    overflow: hidden;
  }
  .toggle {
    @include flexbox($type: inline);
    @include multiProp(64px, height, width);

    @include mouseState(noHover) {
      .fas { opacity: 0.75; }
    }
    @include mouseState(hover) {
      .fas { opacity: 1; }
    }

    .fas { font-size: 26px; }
  }
  .brand {
    @include flexbox($type: inline);
    height: 64px;
    padding: 12px 16px;
    font-size: 1.5em;

    @mixin brandBorder($hover, $click) {
      @if $hover == $click {
        .name {
          &::before, &::after { opacity: $hover; }
        }
      }
      @else {
        .name {
          &::before { opacity: $hover; }
          &::after  { opacity: $click; }
        }
      }
    }
    @include mouseState(noHover) {
      @include brandBorder(0, 0);
    }
    @include mouseState(hover) {
      @include brandBorder(1, 0);
    }
    @include mouseState(click) {
      @include brandBorder(0, 1);
    }

    .name {
      padding: 4px 0;

      &::before, &::after {
        @include fill(true);
        border-bottom: bd(2px);
      }
      &::before { @include theme(bc); }
      &::after  { border-color: #fff; }

      .emphasis { @include theme(c); }
    }
  }
  li {
    line-height: 0;

    a {
      display: grid;
      grid-template-columns: 64px 1fr;
      padding: 16px 32px 16px 0;
      line-height: $df-line-height;
      text-shadow: dropShadow(tpb(0.25));

      &::before { @include fill(true, #000); }

      @mixin linkStyles($link-fg, $link-bg, $badge-bg, $badge-bd) {
        opacity: $link-fg;

        &::before { opacity: $link-bg; }

        .badges .badge {
          &::before { opacity: $badge-bg; }
          &::after { opacity: $badge-bd; }
        }
      }

      &:not([data-selected="true"]), &[data-selected="false"] {
        &::before { background-color: #000; }

        .badges .badge {
          color: #fff;
          text-shadow: dropShadow(tpb(0.15));

          &.new::before { background-color: $badge-new; }
          &.expiring::before { background-color: $badge-expiring; }
        }

        @at-root %idleLink {
          @include linkStyles(0.75, 0, 0, 1);
        }

        &:not([disabled]) {
          @include mouseState(noHover) {
            @extend %idleLink;
          }
          @include mouseState(hover) {
            @include linkStyles(1, 0.2, 1, 0);
          }
          @include mouseState(click) {
            @include linkStyles(1, 0.4, 1, 0);
          }
        }
        &[disabled] {
          @extend %idleLink;
        }

      }
      &[data-selected="true"] {
        &::before { @include theme(bg); }

        .badges .badge {
          // color: #fff;

          &::before {
            background-color: tpb(0.25);
            border: bd(1.5px);
          }
        }

        @include linkStyles(1, 1, 1, 0);
      }
    }
    .fas {
      @include flexbox;
      grid-column: 1;
      width: 64px;
      font-size: 22px;
      color: #fff;
    }
    .name {
      grid-column: 2;
      font-size: 1.25em;
    }
    .fas, .name { padding: 0 16px; }
    .badges {
      @include flexbox(center, start);
      grid-column: 2;
      padding: 2px 16px;
      font-size: 0.7em;

      .badge {
        padding: 5px 10px;
        line-height: 1;
        border-radius: 20px;
        box-shadow: dropShadow(tpb(0.25));

        &::after { border: bd(1px); }
        &::before, &::after { @include fill(true); }
        &:not(:last-child) { margin-right: 4px; }
      }
    }
  }
  .separator {
    border-bottom: bd(2px, #fff);
    margin: 16px;
    opacity: .5;
  }
}
