// Element Playground Styles

@import "../../partials/_globals";

main {
  @include ready;

  section:not(:last-of-type) {
    @include multiProp(32px, padding-bottom, margin-bottom);
    border-bottom: bd(1.5px, tpw(0.5));
  }
  .group:not(fieldset) {
    // @include flexbox(s, s, $wrap: true);
    padding: 16px;
    background-color: tpw(0.15);
    border: bd(1.5px, tpw(0.5));
    border-radius: 8px;

    &:not(:last-child) {
      margin-bottom: 24px;
    }

    &.alignment .button-group {
      // @include flexbox($hAlign: s, $wrap: true);
    }
    &.button-groups {
      // @include flexbox($hAlign: s, $wrap: true);

      .title + div {
        $maxDivWidth: 420px;

        @include flexbox(none, none, $wrap: true);
        flex: 1;
        
        &:not(.button-group) {
          // max-width: $maxDivWidth;
          @include multiProp(12px, padding-bottom, margin-bottom);
          border-bottom: 1.5px solid tpw(0.5);
        }
        &.button-group {
          $buttonGroupMargins: 4px;

          max-width: calc(#{$maxDivWidth} + #{($buttonGroupMargins * 2)});
        }
      }
    }
    &.alignment, &.button-groups {
      button {
        // flex: 1 1 200px;
      }
    }
    &:not(.button-groups) .button-group {
      @include flexbox(s, s, $wrap: true);

      button {
        // flex: 1 1;
        min-width: calc(12.5% - 8px);
      }
    }

    pre {
      margin-top: 16px;
      margin-bottom: 0;
    }
  }
  .code-block {
    $lineNumberPadding: 8px;

    padding-left: 0;
    margin-top: 32px;
    margin-bottom: 0;

    > .copy-to-clipboard {
      position: absolute;
      z-index: zOrder(higher);
      top: 8px;
      right: 8px;
      color: #fff;
      opacity: 0;

      &[hidden] {
        display: none;
      }

      @at-root .code-block {
        @include mouseState(hover) {
          > .copy-to-clipboard {
            opacity: 1;
          }
        }
      }
    }
    
    > .copy-content {
      opacity: 0;
      visibility: none;
      position: absolute;
      top: -100%;
      left: -100%;
    }
    .line {
      @include flexbox(none, none);

      &[aria-expanded="false"] {
        display: none;
      }

      @include mouseState (hover) {
        // cursor: pointer;

        &::before {
          opacity: 1;
        }
      }

      &::before {
        @include fill(true, tpw(0.05));
        opacity: 0;
      }
    }
    .sub-node {
      @include flexbox (c, none, inline);
    }
    .line-number {
      @include flexbox(s, e);
      // min-width: 4em;
      padding: 0 #{$lineNumberPadding / 2};
      text-align: right;
      opacity: 0.5;
      // font-size: 0.9em;
      border-right: bd(1.5px);
      user-select: none;

      @at-root .code-block {
        &.medium .line-number { min-width: calc(3.75em + #{$lineNumberPadding * 2}); }
        &.long .line-number   { min-width: calc(4.75em + #{$lineNumberPadding * 2}); }

        .line {
          @include mouseState(hover) {
            .line-number {
              &        { opacity: 1; }
              .fold    { opacity: 0.5; }
            } 
          }
          @include mouseState(click) {
            .line-number { 
              &        { opacity: 0.75; }
              .fold    { opacity: 0.25; }
            }
          }
        }
      }

      .number {
        @include flexbox($hAlign: c);
        text-align: right;
        // @include multiProp(calc(1em + 8px), sizing);
        padding: 2px $lineNumberPadding;
        // width: 100%;

        &::before {
          @include fill(true, tpw(0.15));
          border-radius: 4px;
          opacity: 0;
        }

        @include mouseState(hover) {
          cursor: pointer;
  
          &::before { opacity: 1; } 
        }
        @include mouseState(click) {
          &::before { opacity: 0.75; }
        }
      }
      .fold {
        @include flexbox(c, e);
        font-size: 0.9em;
        padding: 2px #{$lineNumberPadding / 2};
        opacity: 0;

        &[hidden] {
          left: -100vw;
        }

        @at-root .code-block {
          @include mouseState (hover) {
            .line .fold { opacity: 0.5; }
          }
          @include mouseState (click) {
            .line .fold { opacity: 0.25; }
          }

          &.single-thread .line .fold {
            display: none;
          }
          .line {
            &:not(.folded) .line-number .fold .fas {
              transform: rotate(90deg);
            }
            .line-number .fold {
              @include mouseState (hover) { opacity: 1; }
              @include mouseState (click) { opacity: 0.75; }
            }
          }
        }
      }
    }
    .line-content {
      $maxDepth: 20;

      @include flexbox($hAlign: s, $wrap: true);

      white-space: break-spaces;
      word-wrap: anywhere;
      word-break: break-all;
      margin-left: #{$lineNumberPadding * 2};
      width: 100%;
      cursor: text;

      &::before {
        @include fill(true);
        border-left: bd(1.5px, tpw(0.75));
        opacity: 0;
        z-index: -1;
      }

      @at-root {
        .code-block {
          @for $i from 0 to $maxDepth {
            &[data-highlight-depth="#{$i}"] {
              .line {
                @for $x from $i to $maxDepth {
                  &[data-depth="#{$x}"] .line-content::before {
                    opacity: 1;
                    left: #{$i - 1}em;
                  }
                }
              }
            }
          }

          .line {
            @for $i from 0 to $maxDepth {
              &[data-depth="#{$i}"] .line-content {
                // padding-left: #{$i}em;
              }
            }
          }
        }
      }
    }
  }
  .title {
    width: 100%;
    line-height: 1.5;

    @at-root main {
      section > .title { margin-bottom: 32px; }
      .group > .title  { margin-bottom: 16px; }
    }
  }
  .multi-view {
    &:not(.multi-view-setup) {
      display: block;
      
      .view {
        display: none;
      }
      .view:first-of-type {
        display: block;
      }
    }
  }
}