<?php
  namespace ShiftCodesTK;

  /** # Defining Config Values #
   * When downloading a fresh copy of the build, you **must** specify some *Config Values*.
   * 
   * - 1. Make a copy of this file and change the *File Extension* from `.template` to `.php`.
   * - 2. Configure the script below to add all of the required *Config Files* and *Config Values*.
   * - 3. The next time the site is loaded, this script will be executed. If the *File Extension* of this file is changed to `.used`, the script executed successfully.
   * 
   * There are two ways you can define the Config Values:
   * 
   * ## Using Existing Config Values ##
   * You can copy any existing *Config Files* to the `/src/private/resources/config` directory.
   * Some *Config Files* may be Version Controlled and available when fetching a fresh copy of the build.
   * 
   * The following files *should* be bundled with the build, and always available:
   * | Alias | Filename | Exposed *Config Values* |
   * | --- | --- | --- |
   * | *site_version* | `site-version.php` | `site_version` |
   * 
   * ## Defining New Config Values ##
   * You can manually define any additional *Config Files* and *Config Values* using this script.
   * 
   * The following files are required, but *are not bundled* with the build. You will need to manually define them.
   * | Alias | Filename | Exposed *Config Values* |
   * | --- | --- | --- |
   * | *site_maintenance* | `.site-maintenance.php` | `site_maintenance` |
   */
 
  /**
   * **Creating Config Files**
   * 
   * To store *Config Values*, you need a *Config File* to store them to. 
   * 
   * You can use the method below to create any *Config Files* you need.
   */

  // Site Maintenance (Single-Property Config File)
  Config::addConfigFile([
    'filename' => 'site_maintenance.php',
    'alias'    => 'site_maintenance',
    'type'     => Config::CONFIGURATION_TYPE_PROPERTY,
    'comment'  => "Indicates if *Site-Wide Maintenance* is currently in effect.
    
    When **true**, all incoming requests will be denied and return a `503` Status Code."
  ]);

  // General Config (Multiple-Property Config File, Example)
  // Config::addConfigFile([
  //   'filename' => 'general.php',
  //   'alias'    => 'general',
  //   'type'     => Config::CONFIGURATION_TYPE_ARRAY,
  //   'comment'  => "A general *Config File* where miscellaneous Config Values can be stored."
  // ]);

  /**
   * **Storing Config Values**
   * 
   * Once you have created the *Config File* the *Config Values* will be stored to, you can then add them.
   * 
   * You can use the method below to create any *Config Values* you need.
   */

  // Site Maintenance (Adding a *Single-Property Config File*)
  Config::updateConfigurationValue('site_maintenance', false);

  // General Config Property (Adding a Config Value to a *Multi-Property Config File*, Example)
  // Config::addConfigurationValue('general.foo', 'foobarbaz');
?>