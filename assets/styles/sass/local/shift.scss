/*********************************
  SHiFT Page Styles
*********************************/

/*** Imports ***/
@import "../partials/_globals";

/*** Style Declarations ***/
.shift-header, .feed { @include ready; }
.shift-header {
  background-color: $site-color-lighter;
  border-bottom: bd(2px, $site-color-darker);
  width: 100%;
  font-size: 1.25em;

  .content-wrapper {
    @include flexbox(c, sb);
    padding: 12px 16px;
  }
  .section { @include flexbox; }
  .badge {
    display: flex;
    @include sizing(1.7em, 3.4em);
    font-size: 1em;
    border-radius: 4px;
    text-shadow: dropShadow(tpb(0.25));
    margin-right: 6px;
    overflow: hidden;
    cursor: default;

    // Individual Theming
    & {
      $colors: (
        total: #808080,
        new: $badge-new,
        exp: $badge-exp
        );

      @each $colorN, $colorV in $colors {
        &.#{$colorN} { background-color: $colorV; }
      }
    }
    &.new, &.exp {
      &::before { background-color: #000; }
      &::after {
        border: bd(2px);
        border-radius: 4px;
      }
      @include pshared { @include fill(true); }
      &:not(.inactive) {
        &[data-pressed="false"]::after { opacity: 0; }
        &[data-pressed="true"]::after  { opacity: 1; }
        @include mouseState(noHover) {
          &::before                    { opacity: 0; }
        }
        @include mouseState(hover) {
          cursor: pointer;

          &::before                    { opacity: 0.25; }
        }
        @include mouseState(click)     { opacity: 0.75; }
      }
      &.inactive {
        opacity: 0.5;

        @include pshared { opacity: 0; }
      }
    }

    .count { background-color: tpb(0.2); }
    .fas { font-size: 0.9em; }
    .count, .fas {
      @include flexbox;
      flex: 1;
      height: inherit;
    }
  }
  .sort > button {
      @include flexbox;
      @include multiProp(1.5em, sizing);
      font-size: 1.25em;
      padding: 0.25em;
      line-height: 1;
      border-radius: 4px;
      overflow: hidden;

      &::before { @include fill(true, #fff); }

      &[data-pressed="false"] {
        @include mouseState(noHover) {
          &::before                { opacity: 0.2; }
        }
        @include mouseState(hover) {
          &::before                { opacity: 0.4; }
        }
        @include mouseState(click) { opacity: 0.75; }
      }
      &[data-pressed="true"] {
        opacity: 0.75;

        &::before { opacity: 0.4; }
      }
    }
}
.feed {
  width: 100%;
  padding: 32px 16px 64px;
}
.overlay {
  @include flexbox;
  @include fill;

  &[hidden], > [hidden] {
    display: inherit;
  }
  &:not([hidden]) {
    @include multiProp(1, opacity, z-index);
  }
  &[hidden] {
    opacity: 0;
    z-index: -1;
  }

  .spinner {
    transform: scale(1.5);

    &:not([hidden]) { opacity: 1; }
    &[hidden]       { opacity: 0; }
  }
  .error {
    text-align: center;

    &:not([hidden]) { opacity: 0.25; }
    &[hidden]       { opacity: 0; }

    .fas {
      font-size: 2em;
      padding: 16px 0;
    }

    @media screen and (max-width: 549px) { font-size: 1.75em; }
    @media screen and (min-width: 550px) { font-size: 2em; }
  }
  .spinner, .error { position: absolute; }
}
.dropdown-panel.shift-code {
  $margins: 16px;

  @keyframes panelFadeIn {
    0%    { opacity: 0; }
    100%  { opacity: 1; }
  }

  opacity: 0;
  animation: panelFadeIn 0.4s linear forwards;

  &[data-filtered="true"] {
    &::before, .header { opacity: 0.5; }
  }
  &:not(:first-child) { margin-top: $margins; }
  &:not(:last-child)  { margin-bottom: $margins; }
  &.new::before { border-color: $badge-new; }
  &.exp::before { border-color: $badge-exp; }
  &.new.exp::before {
    $colors: (
      top: $badge-new,
      left: $badge-new,
      bottom: $badge-exp,
      right: $badge-exp
      );

    @each $side, $color in $colors {
      border-#{$side}-color: $color;
    }
  }

  .header {
    .title {
      @media screen and (min-width: 435px) { font-size: 1.3em; }
    }
    .icon { font-size: 1.5em; }
    .labels {
      $cMargins: -2px;

      @include flexbox(mone, none, $wrap: true);
      font-size: 0.65em;
      margin: 2px $cMargins $cMargins;
      width: calc(100% + 1.25em + 24px);
      opacity: 1;

      .label {
        @include flexbox;
        margin: 2px;
        padding: 4px 8px;
        border: bd(1.5px);
        border-radius: 4px;
        text-shadow: dropShadow(tpb(0.25));
        line-height: 1;

        &::before {
          @include fill(true);
          border-radius: 0;
          opacity: 0.25;
        }

        // Theming
        & {
          $bgColors: (
            description: #fff,
            new: $badge-new,
            exp: $badge-exp
            );

          @each $label, $color in $bgColors {
            &.#{$label} {
              border-color: $color;

              &::before { background-color: $color; }
            }
          }
        }
      }
    }
    .full-width { padding: 8px; }
    .progress-bar {
      @include sizing(9px, 100%);
      border: bd(1px);
      border-radius: 4px;
      @include multiProp(tpb(0.25), background-color, border-color);
      overflow: hidden;

      &.inactive { opacity: 0.5; }
    }
    .progress {
      @keyframes progressClimb {
        0%    { transform: translateX(-100%); }
        100%  { transform: translateX(0); }
      }

      position: absolute;
      height: 100%;
      @include theme(c, bg);
      border-radius: inherit;
      box-shadow: 0 0 10px;
      transform: translateX(-100%);
      animation: progressClimb 1.2s 0.4s linear forwards;
    }
  }
  .body {
    grid-template-columns: repeat(2, 1fr);
    padding: 8px;

    @mixin fullWidth { grid-column: 1 / span 2; }

    @at-root .dropdown-panel[data-expanded="true"] .body { display: grid; }

    .section {
      padding: 8px;

      &:not(.can-split) { @include fullWidth; }

      @media screen and (max-width: 380px) { @include fullWidth; }
    }
    .content {
      $padding: 8px;

      margin-top: 8px;
      border-radius: 4px;
      background-color: tpb(0.2);
      word-wrap: break-word;
      overflow: hidden;

      &.inactive { color: tpw(0.5); }
      &:not(.code) { padding: $padding; }
      &.code {
        display: grid;
        grid-template-columns: 1fr auto;
      }

      a { word-break: break-all; }
      ul { margin-left: 8px; }
      input {
        display: block;
        position: absolute;
        transform: translateY(calc(-100% - 8px));
        width: 100%;
      }
      .display { padding: $padding; }
      .copy {
        position: absolute;
        @include pull(tb, r);
        font-size: 1.1em;
        padding: #{$padding} #{$padding * 4};
        background-color: scale-color($site-color-lighter, $lightness: -35%);

        &::before { @include fill(true, #fff); }

        @at-root .dropdown-panel .section .content {
          @include mouseState(noHover) {
            .copy:not(:focus) { opacity: 0; }
          }
          @include mouseState(hover) {
            .copy             { opacity: 1; }
          }
        }
        @include mouseState(noHover) {
          &::before                { opacity: 0.2; }
        }
        @include mouseState(hover) {
          &::before                { opacity: 0.4; }
        }
        @include mouseState(click) { opacity: 0.75; }

        .fas { @include multiProp(1em, sizing); }
      }
    }
    .separator {
      @include fullWidth;
      margin: 8px;
      height: 4px;
      background-color: tpb(0.15);
      border-radius: 4px;
    }
    .background {
      @include fill;
      @include flexbox;
      color: #000;
      opacity: 0.1;
      overflow: hidden;

      @media screen and (max-width: 499px) { font-size: 16em; }
      @media screen and (min-width: 500px) { font-size: 22em; }
    }
  }
}
