/*********************************
  Updates Page Styles
*********************************/

/*** Imports ***/
@import "../partials/_globals";

/*** Style Declarations ***/
.updates-header, main { @include ready; }
.updates-header {
  background-color: $site-color-lighter;
  border-bottom: bd(2px, $site-color-darker);
  width: 100%;
  font-size: 1.25em;

  .content-wrapper {
    @include flexbox($hAlign: sb);
    padding: 12px 16px;
  }
  .section {
    @include flexbox;

    &.current {
      font-size: 0.9em;

      &[data-hidden="true"]       { opacity: 0; }
      &:not([data-hidden="true"]) { opacity: 1; }

      .title { opacity: 0.75; }
      .currentver {
        @include mouseState(noHover) { opacity: 0.75; }
        @include mouseState(hover)   { opacity: 1; }
        @include mouseState(click)   { text-decoration: underline; }
      }
    }
    &.jump {
      > button {
        @include flexbox;
        font-size: 1em;
        padding: 0.3em 0.6em;
        line-height: 1;
        border-radius: 4px;
        overflow: hidden;

        &::before { @include fill(true, #fff); }

        &[data-pressed="false"] {
          @include mouseState(noHover) {
            &::before                { opacity: 0.2; }
          }
          @include mouseState(hover) {
            &::before                { opacity: 0.4; }
          }
          @include mouseState(click) { opacity: 0.75; }
        }
        &[data-pressed="true"] {
          opacity: 0.75;

          &::before { opacity: 0.4; }
        }
      }
      .dropdown {
        position: absolute;
        flex-direction: column;
        @include multiProp(100%, height, width);
        transform: translateY(100%);
        z-index: zOrder(higher);

        @include hiddenToggle(flex);
        &[data-expanded="false"] { opacity: 0; }
        &[data-expanded="true"]  { opacity: 1; }

        .arrow {
          position: absolute;
          @include multiProp(1rem, height, width);
          @include pull(t);
          transform: translateY(calc(-15% + 0.75em)) rotate(45deg);
          align-self: center;
          background: linear-gradient(to bottom right, #fff 0.4em, transparent 0.4em);
          z-index: zOrder(higher);
        }
        .panel {
          position: absolute;
          @include pull(t);
          transform: translateY(0.98em);
          align-self: flex-end;
          font-size: 1.1rem;
          max-height: 12.5em;
          white-space: nowrap;
          border-radius: 4px;
          color: $site-color-lighter;
          background-color: #fff;
          box-shadow: shadow(tpb(0.75), 0.5em);
          overflow-x: auto;
          overflow-y: scroll;
        }
        .description {
          display: block;
          opacity: 0.35;
        }
        li a {
          display: inline-block;
          width: 100%;
          font-size: 0.9em;
          text-align: left;
          cursor: pointer;

          &::before { @include fill(true, #000); }

          @include mouseState(noHover) {
            opacity: 0.8;

            &::before       { opacity: 0; }
          }
          @include mouseState(hover) {
            opacity: 1;

            &::before       { opacity: 0.15; }
          }
          @include mouseState(click) {
            &::before       { opacity: 0.3; }
          }
        }

        @media screen and (max-width: 549px) {
          .description, li a { padding: 6px 18px 6px 9px; }
        }
        @media screen and (min-width: 550px) {
          .description, li a { padding: 4px 16px 4px 8px; }
        }
      }
    }
  }
}
main {
  @mixin panelBase {
    @at-root main .panel { @content; }
  }

  @include flexbox(none, none, $direction: c);
  padding: 32px 16px 64px;
  overflow: hidden;

  .panel {
    @keyframes panelFadeIn {
      0%    { opacity: 0; }
      100%  { opacity: 1; }
    }

    color: inherit;
    border-radius: 4px;
    opacity: 0;
    animation: panelFadeIn 0.4s linear forwards;
    overflow: hidden;

    &::before {
      @include fill(true, $site-color-lighter);
      border: bd(2px, $site-color-darker);
      border-radius: 4px;
    }
    &:not(:last-child) { margin-bottom: 1.5em; }

    .hashTargetOverlay {
      @keyframes panelHashTargeted {
        0%, 50%, 100% { opacity: 0.25; }
        25%, 75%      { opacity: 1; }
      }
      @keyframes panelHashTargetFade {
        0%   { opacity: 0.75; }
        100% { opacity: 0; }
      }

      @include fill(true);
      border: bd(2px);
      border-radius: 4px;
      opacity: 0;

      @at-root main .panel {
        $this: unquote(".hashTargetOverlay");

        &[data-hashtarget-highlighted="true"] #{$this}  { animation: panelHashTargeted 2.5s linear infinite; }
        &[data-hashtarget-highlighted="false"] #{$this} { animation: panelHashTargetFade 0.75s linear; }
      }
    }
    .header {
      display: grid;
      grid-template-columns: 2.55em 1fr auto;
      font-size: 1.5em;
      padding: 8px;

      > .icon {
        @include flexbox(none, $type: inline);
        grid-column: 1;
        font-size: 1.5em;
      }
      .title {
        grid-column: 2;

        @media screen and (max-width: 449px) { font-size: 0.9em; }
        @media screen and (min-width: 450px) { font-size: 1em; }
      }
        .version { font-size: 1em; }
        .info {
          display: flex;
          opacity: 0.5;
          font-size: 0.75em;

          @media screen and (max-width: 449px) {
            flex-direction: column;
            align-items: flex-start;
          }
          @media screen and (min-width: 450px) {
            flex-direction: row;
            align-items: center;
          }
        }
        .separator {
          font-size: 1.5em;
          padding: 0 0.35em;
          line-height: 0;
        }

        @media screen and (max-width: 449px) {
          .date, .type {
            display: list-item;
            list-style: disc inside;
          }
          .separator { display: none; }
        }
        @media screen and (min-width: 450px) {
          .date, .type, .separator { display: inline; }
        }
      .toggle {
        grid-column: 3;
        font-size: 1em;
        @include multiProp(2em, height, width);

        @include mouseState(noHover) {
          &:not([hidden])          { opacity: 0.75; }
        }
        @include mouseState(hover) { opacity: 1; }
        @include panelBase {
          $this: unquote(".header .toggle");

          &[data-expanded="false"] #{$this} { transform: rotate(0deg); }
          &[data-expanded="true"] #{$this}  { transform: rotate(180deg); }
        }
      }
      > .icon, .title, .toggle {
        grid-row: 1;
        padding: 8px;
      }
      > .icon, .title { align-self: center; }
    }
    .body {
      background-color: tpb(0.2);
      @include spacing(0 2px 2px, 16px);
      overflow: hidden;

      @include panelBase {
        &[data-expanded="false"] .body { display: none; }
        &[data-expanded="true"] .body  { display: grid; }
      }

      h3 {
        font-size: 1.25em;

        &:not(:first-child) { margin-top: 8px; }
      }
    }
  }
}
